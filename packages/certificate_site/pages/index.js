import Head from "next/head";
import styles from "../styles/Home.module.css";
import Input from "reactstrap/lib/Input";
import Alert from "reactstrap/lib/Alert";
import { useEffect, useState } from "react";
import Button from "reactstrap/lib/Button";
import graphQlClient from "../configs/ApolloClient.config";
import { GET_CERTIFICATE_QUERY } from "../gql/getCertificate";
import { useRouter } from "next/router";

export default function Home() {
  const [serverError, setServerError] = useState("");
  useEffect(() => {
    const credInput = document.getElementById("cred-id");
    if (credInput) {
      credInput.autofocus = true;
    }
  }, []);
  const getCertificate = async (id) => {
    console.log({ id });
    const { data } = await graphQlClient.query({
      query: GET_CERTIFICATE_QUERY,
      variables: { credentialId: id },
    });
    if (data) return data.getCertificate;
    return null;
  };
  const router = useRouter();
  const formSubmit = async (e) => {
    e.preventDefault();
    const credId = document.getElementById("cred-id").value;
    const cert = await getCertificate(credId);
    if (!cert) setServerError("Certificate Does Not Exists");
    router.push("/verify/" + credId);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Verify ShapeAI Certificates</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <img
          width={500}
          src={
            "https://shapeai-uploads.s3.ap-south-1.amazonaws.com/logo-high.svg"
          }
          alt={"Shape AI"}
        />
        <h1 className={"title"}>Enter the credential Id below to verify</h1>

        <p className={styles.description}>
          The credential id can be found at the bottom-right of the certificate.
        </p>

        <div className={styles.grid}>
          <form onSubmit={formSubmit}>
            <Input
              placeholder={"Ex: xcf3bx"}
              id={"cred-id"}
              required
              autofocus={true}
              onChange={() => setServerError("")}
              minLength={6}
              maxLength={7}
            />
            <Button className="" style={{ margin: "10px" }} color={"primary"}>
              Verify
            </Button>
          </form>
        </div>
        <Alert color="danger" isOpen={serverError}>
          <span className="alert-text">{serverError}</span>
        </Alert>
      </main>
    </div>
  );
}
